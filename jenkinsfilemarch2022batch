def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node{
    
echo "Job name is: ${env.JOB_NAME}"
echo "Node name is: ${env. NODE_NAME}"
 
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])]) 

def mavenHOME = tool name: 'maven3.8.5'

try{
}//try Closing

//node closing

//Get the code from Github Repo   
stage('CheckoutCode'){
git branch: 'development', credentialsId: '6459f670-7d47-497d-a441-05cd2e83905b', url: 'https://github.com/rajashekar447/maven-web-application.git' 
}
//Do the build by using Maven Build tool 
stage('Build'){
sh "${mavenHOME}/bin/mvn clean package"
}
/*
//Execute the SoanrQube Report
stage('ExecuteSoanrQubeReport'){
sh "${mavenHOME}/bin/mvn sonar:sonar"
}

//Uploard Articacts into Articatory Repo
stage('UploardArticactsintoNexus'){
sh "${mavenHOME}/bin/mvn clean deploy"
}

//Deploy Application into Tomcat Server
stage('DeployApplicationIntoTomcatServer'){
sshagent(['c06a44dd-81da-4091-9528-f33547cb529f']) {
   sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@54.87.38.52:/opt/apache-tomcat-9.0.62/webapps/"
}

}
*/
}//Try Closing

  currentBuild.result = "FAILED"
  }  throw e
  finally {

 sendSlackNotifyBuild(currentBuild.result)
}
}//Node Closing

}
